{"version":3,"sources":["components/BirthdayReminderElement.js","components/BirthdayReminder.js","components/QuizElement.js","components/QuizSection.js","images/light-bulb-svgrepo-com.svg","quizConstants.js","App.js","reportWebVitals.js","index.js"],"names":["BirthdayReminderElement","props","name","date","splitArray","split","DATE","Date","TODAY","now","timeDeltaInDays","Math","floor","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","console","log","dateToTextFormat","dateInEnglish","daysRemaining","useState","clipboard","setClipboard","focusRef","useRef","className","onDoubleClick","e","old","current","focus","ref","parseIntoDate","birthdayObj","names","Object","keys","dates","values","parsedValues","todayYear","getFullYear","forEach","item","index","parsedDate","push","humanReadbleDates","getDate","getMonth","BirthdayReminder","upcomingDays","setUpcomingDays","upcomingObj","today","timeDeltas","timeDelta","argIndices","array","arrayObject","map","value","idx","sort","a","b","data","argsort","sorted_names","sorted_dates","sort_index","getSortedBirthdays","tolerance","parseDates","upcomingBirthdays","daysDelta","getUpcomingBirthdays","allBirthdays","sortedBirthdaysNames","sortedBirthdaysDates","nBirthdaysComing","length","id","htmlFor","type","min","max","step","onChange","target","placeholder","QuizElement","idGenerator","answer","dipatchFunction","dispatchFunction","isTrue","submit","answerSplitArray","answerDate","parseInt","answerMonth","inputId","next","minYear","maxYear","returnRightClassNames","splitUserInput","payload","ACTIONS","reducer","state","action","newState","boolState","count","resetStateHandler","submitStateHandler","updatedCount","filter","updateStateHandler","iterationStart","returnShuffledArrays","answers","shuffledIndices","n_items","randomIndices","randomNumber","random","includes","randomIndexGenerator","shuffledKeys","shuffledAnswers","_g","QuizSection","rememberBirthdays","ids","namesRef","answersRef","useEffect","booleanStateConstant","useReducer","dispatch","setRenderCount","href","onClick","newNames","newAnswers","_extends","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLightBulbSvgrepoCom","_ref","svgRef","title","titleId","xmlns","viewBox","xmlnsXlink","enableBackground","d","ForwardRef","require","App","mode","setMode","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec853737.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useRef, useState } from \"react\";\r\nfunction dateToTextFormat(date){\r\n    const splitArray = date.split(\"/\");\r\n    const DATE = new Date(splitArray[2], splitArray[1]-1, splitArray[0]);\r\n    const TODAY = Date.now()\r\n    const timeDeltaInDays = Math.floor((DATE - TODAY)/(1000*60*60*24))\r\n\r\n\r\n    let ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(DATE);\r\n    let mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(DATE);\r\n    let da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(DATE);\r\n    console.log(`${da}-${mo}-${ye}`);\r\n    return [`${da}-${mo}-${ye}`, timeDeltaInDays]\r\n}\r\n\r\n\r\nconst BirthdayReminderElement= (props)=>{\r\n    // Data \r\n    const name = props.name;\r\n    const date = props.date;\r\n    // Get in formated Structure \r\n    const [dateInEnglish, daysRemaining] =  dateToTextFormat(date);\r\n    \r\n    // Refs & State\r\n    const [clipboard, setClipboard] = useState(false);\r\n    const focusRef = useRef();\r\n    // Handler \r\n    function clipboardChangeHandler(e){\r\n        setClipboard(old=>!old);\r\n        focusRef.current.focus()\r\n    }\r\n\r\n    return (\r\n        <article \r\n        className={clipboard?\"birthday-reminder-element clipboard\":\"birthday-reminder-element\"}  \r\n        onDoubleClick={clipboardChangeHandler} \r\n        ref = {focusRef}\r\n        >\r\n            <div className=\"element-header\">\r\n                <h4>{name}</h4>\r\n                <p>{dateInEnglish}</p>\r\n            </div>\r\n            <p>{daysRemaining} days remaining</p>\r\n        </article>\r\n        \r\n    )\r\n}\r\n\r\nexport default BirthdayReminderElement;","import React from 'react';\r\nimport BirthdayReminderElement from './BirthdayReminderElement';\r\nimport {useState, useEffect} from 'react';\r\n// Create a simple quizzer \r\n// Reminder Section \r\n    // Display the birthdays coming in two weeks \r\n\r\n// Utility functions\r\nfunction parseIntoDate(birthdayObj){\r\n    const names = Object.keys(birthdayObj);\r\n    const dates = Object.values(birthdayObj);\r\n    let parsedValues = [];\r\n    // Consider this year \r\n    const todayYear = new Date().getFullYear()\r\n    dates.forEach((item, index)=>{\r\n        let parsedDate;\r\n        if(item){\r\n            const splitArray = item.split('/');\r\n            const date = splitArray[0], month = splitArray[1], year = splitArray[2];\r\n            parsedDate = new Date(todayYear, month-1, date)\r\n        } else {\r\n            parsedDate = \"\"\r\n        }\r\n\r\n        parsedValues.push(parsedDate)\r\n    })\r\n    return [names, parsedValues]\r\n}\r\n\r\nfunction humanReadbleDates(date){\r\n    const day = date.getDate();\r\n    const month = date.getMonth();\r\n    const year = date.getFullYear();\r\n    return `${day}/${month+1}/${year}`\r\n}\r\n\r\nfunction getUpcomingBirthdays(birthdayObj, tolerance=28){\r\n    const today = Date.now();\r\n    const [names, parseDates] = parseIntoDate(birthdayObj);\r\n    let upcomingBirthdays = {};\r\n    // Filter Dates\r\n    parseDates.forEach((item, index)=>{\r\n        if(item){\r\n            let timeDelta = item - today;\r\n            let daysDelta = Math.floor(timeDelta/(1000*60*60*24));\r\n            if ((daysDelta >= 0) && (daysDelta <= tolerance)){\r\n                upcomingBirthdays[names[index]] = humanReadbleDates(item);\r\n                \r\n            }\r\n        } \r\n        \r\n    })\r\n\r\n    return (upcomingBirthdays)\r\n\r\n\r\n}\r\n\r\nfunction argsort(array) {\r\n    const arrayObject = array.map((value, idx) => { return { value, idx }; });\r\n    arrayObject.sort((a, b) => {\r\n\r\n        if (a.value < b.value) {\r\n\r\n            return -1;\r\n\r\n        }\r\n\r\n        if (a.value > b.value) {\r\n\r\n            return 1;\r\n\r\n        }\r\n\r\n        return 0;\r\n\r\n    });\r\n\r\n    const argIndices = arrayObject.map(data => data.idx);\r\n\r\n    return argIndices;\r\n }\r\n\r\nfunction getSortedBirthdays(upcomingObj){\r\n    const today = Date.now();\r\n    const [names, dates] = parseIntoDate(upcomingObj);\r\n    const timeDeltas = [];\r\n    dates.forEach((item)=>{\r\n        const timeDelta = item - today;\r\n        timeDeltas.push(timeDelta)\r\n    })\r\n\r\n    const argIndices = argsort(timeDeltas);\r\n    // Sorted Indices \r\n    let sorted_names = [], sorted_dates = [];\r\n    argIndices.forEach((sort_index)=>{\r\n        sorted_names.push(names[sort_index]);\r\n        sorted_dates.push(humanReadbleDates(dates[sort_index]))\r\n    })\r\n\r\n    // sorted_names.forEach((item, index)=>{\r\n    //     console.log(item, sorted_dates[index])\r\n    // })\r\n    console.log(sorted_names, sorted_dates)\r\n    return [sorted_names, sorted_dates]\r\n}\r\n\r\n\r\n\r\nconst BirthdayReminder = (props)=>{\r\n\r\n    // State \r\n    const [upcomingDays, setUpcomingDays] = useState(28);\r\n\r\n    // Get the data \r\n    const allBirthdays = props.allBirthdays;\r\n\r\n    // Getting the names of those whose birthday is approaching \r\n    const upcomingBirthdays = getUpcomingBirthdays(allBirthdays, upcomingDays)\r\n\r\n    // Sorted arrays \r\n\r\n    const [sortedBirthdaysNames, sortedBirthdaysDates] = getSortedBirthdays(upcomingBirthdays);\r\n    const nBirthdaysComing = sortedBirthdaysDates.length;\r\n\r\n\r\n    // Handle \r\n    function upcomingDaysChange(e){\r\n        const target = e.target.value;\r\n        setUpcomingDays(target)\r\n\r\n    }\r\n\r\n    return (\r\n        <section className=\"birthday-reminder section-module container\"\r\n        id=\"reminder-section\"\r\n        >\r\n\r\n            <h2>Reminder Section</h2>\r\n            \r\n            <div className=\"reminder-input\">\r\n                <label htmlFor=\"reminder-section-n-days-ahead\">Days ahead</label>\r\n                <input id=\"reminder-section-n-days-ahead\" type=\"number\"  min = \"1\" max=\"365\" step=\"1\"\r\n                onChange={upcomingDaysChange}\r\n                placeholder = \"28\"\r\n                />\r\n            </div>\r\n\r\n            <section className=\"upcoming-birthdays\">\r\n                {/* <h3>Upcoming Birthdays</h3> */}\r\n                <h3 className=\"upcoming-birthdays-h4\">Birthdays Coming Up - {nBirthdaysComing} </h3>\r\n                <div className=\"table\">\r\n\r\n                    {\r\n                    sortedBirthdaysNames.map((item, index)=>{\r\n                        return (\r\n                            <BirthdayReminderElement \r\n                            name = {item}\r\n                            date= {sortedBirthdaysDates[index]}\r\n                            />\r\n                        )\r\n                    })\r\n                    }\r\n\r\n                </div>\r\n                \r\n            \r\n            </section>\r\n            \r\n            \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default BirthdayReminder;","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\n// Split the user Input \r\nfunction splitUserInput(value){\r\n    const splitArray = value.split(\"-\");\r\n    console.log(splitArray)\r\n    return [parseInt(splitArray[2]), parseInt(splitArray[1])];\r\n}\r\n\r\n\r\nconst QuizElement = (props)=>{\r\n\r\n    // Constants \r\n    const name = props.name;\r\n    const id = props.id;\r\n    const year = props.year;\r\n    const idGenerator = props.idGenerator;\r\n    const answer = props.answer;\r\n    const dipatchFunction = props.dispatchFunction;\r\n    const isTrue = props.isTrue;\r\n    const submit = props.submit;\r\n    \r\n    // Answer Wrangling\r\n    const answerSplitArray = answer.split('/');\r\n    const answerDate = parseInt(answerSplitArray[0]);\r\n    const answerMonth = parseInt(answerSplitArray[1]); \r\n    console.log(answer, \"day:\", answerDate,\"month:\", answerMonth )\r\n    // Values \r\n    const inputIds = idGenerator();\r\n    const inputId = inputIds.next().value;\r\n\r\n    // Date \r\n    const minYear = `${year}-01-01`;\r\n    const maxYear = `${year}-12-31`;\r\n\r\n    // onEventHandler \r\n    function onUserInputHandler(e){\r\n        const userInput = e.target.value;\r\n        const [day, month] = splitUserInput(userInput);\r\n        console.log(day, month)\r\n        if(day === answerDate && month === answerMonth){\r\n            dipatchFunction({type:name, payload:{value:true}})\r\n        } else {\r\n            dipatchFunction({type:name, payload:{value:false}})\r\n        }\r\n\r\n    }\r\n\r\n    if(isTrue&&submit){\r\n        // console.log(name)\r\n    }\r\n\r\n    // Return classnames \r\n    function returnRightClassNames(isTrue, submit){\r\n        if(!submit) return \"quiz-element\";\r\n        if(isTrue && submit) return \"quiz-element right\"\r\n        else return \"quiz-element wrong\"\r\n    }\r\n\r\n\r\n    return (\r\n        <div \r\n        className={returnRightClassNames(isTrue, submit)} \r\n        \r\n        id={id}>\r\n            <label htmlFor={inputId}>{name}</label>\r\n            <input \r\n            type=\"date\" \r\n            max={maxYear}\r\n            min={minYear}\r\n            onChange={onUserInputHandler}\r\n            id={inputId}         \r\n            placeholder={minYear}\r\n            />\r\n        {(!isTrue && submit)?<p>{answerDate}/{answerMonth}</p>:null}    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuizElement;","import React from 'react';\r\nimport { useState, useReducer, useEffect, useRef } from 'react';\r\n\r\n// Import Quiz element \r\nimport QuizElement from './QuizElement';\r\nimport './style/quizSection.css';\r\n\r\n// Import the required files \r\n\r\n// Constants \r\nconst date = new Date();\r\nconst year = date.getFullYear();\r\n\r\n// ACTIONS \r\nconst ACTIONS = {\r\n    reset:\"RESET\", \r\n    submit:\"SUBMIT\"\r\n}\r\n\r\n\r\n// Reducers\r\nfunction reducer(state, action){\r\n    switch(action.type){\r\n        case ACTIONS.reset:\r\n            return resetStateHandler(state, action);\r\n        case ACTIONS.submit:\r\n            return submitStateHandler(state, action);\r\n        default:\r\n            return updateStateHandler(state, action)\r\n\r\n    }\r\n}\r\n\r\n// State Handler\r\nfunction updateStateHandler(state, action){\r\n    let newState = {...state};\r\n    newState.boolState[action.type] = action.payload.value;\r\n    // Update the Count \r\n    const boolValues = Object.values(newState.boolState);\r\n    const trueValues = boolValues.filter(item=> item);\r\n    const updatedCount=  trueValues.length;\r\n    newState.count = updatedCount;\r\n    console.log(updatedCount);\r\n    return newState;\r\n\r\n}\r\n\r\nfunction resetStateHandler(state, action){\r\n    let newState = {...state};\r\n    let keys = Object.keys(newState.boolState);\r\n    keys.forEach(item=>{\r\n        newState.boolState[item] = false\r\n    })\r\n\r\n    // Reset count \r\n    newState.count = 0;\r\n    // Reset score \r\n    newState.submit = false;\r\n    return newState\r\n}\r\n\r\nfunction submitStateHandler(state, action){\r\n    let newState = {...state, submit:true};\r\n    return newState\r\n}\r\n// Generator Function \r\nfunction* idGenerator () {\r\n    let iterationStart = 0;\r\n    while(true){\r\n        iterationStart++;\r\n        yield iterationStart;\r\n    }\r\n} \r\n\r\n\r\n// Utility function \r\nfunction randomIndexGenerator(max, n_items = false, min = 0, ){\r\n    if(!n_items){\r\n        n_items = max;\r\n    }\r\n    \r\n    let randomIndices = [];\r\n    while(randomIndices.length !== n_items){\r\n        let randomNumber = Math.floor(Math.random()*(max-min) + min);\r\n        if(!(randomIndices.includes(randomNumber))){\r\n            randomIndices.push(randomNumber)\r\n        }\r\n    }\r\n\r\n    return randomIndices\r\n    \r\n}\r\n\r\nfunction returnShuffledArrays(keys, answers){\r\n    const shuffledIndices = randomIndexGenerator(keys.length);\r\n    let shuffledKeys = [], shuffledAnswers = [];\r\n    shuffledIndices.forEach(index=>{\r\n        shuffledKeys.push(keys[index]);\r\n        shuffledAnswers.push(answers[index]);\r\n    })\r\n    return [shuffledKeys, shuffledAnswers];\r\n}\r\n\r\n\r\n\r\nconst QuizSection = (props)=>{\r\n\r\n    // Birthdays List\r\n    const rememberBirthdays = props.rememberBirthdays;\r\n\r\n    // Id Generator\r\n    const ids = idGenerator();\r\n\r\n    // Arrays\r\n    let names = Object.keys(rememberBirthdays);\r\n    let answers = Object.values(rememberBirthdays);\r\n    [names, answers] = returnShuffledArrays(names, answers);\r\n\r\n    // Refs\r\n    const namesRef = useRef(names);\r\n    const answersRef = useRef(answers) \r\n\r\n\r\n    useEffect(()=>{\r\n        // Arrays\r\n    }, [])\r\n\r\n\r\n    // Count State \r\n    const booleanStateConstant = {};\r\n    names.forEach((item)=>{\r\n        booleanStateConstant[item]=false;\r\n    })\r\n\r\n    const [state, dispatch] =  useReducer(reducer, {boolState: booleanStateConstant, count:0, submit:false});\r\n    const [renderCount, setRenderCount] = useState(0);\r\n    \r\n    // Update Count \r\n    useEffect(() => {\r\n        console.log(state)\r\n        \r\n    }, [state])\r\n\r\n    // Handlers \r\n    function retryHandler(e){\r\n        // e.target.preventDefault();\r\n        console.log(\"Retrying\")\r\n        // Update the current ref\r\n        let [newNames, newAnswers] = returnShuffledArrays(names, answers);\r\n        namesRef.current = newNames;\r\n        answersRef.current = newAnswers;\r\n        setRenderCount(old=>old+1);\r\n        dispatch({type:ACTIONS.reset})\r\n    }\r\n\r\n    function submitHandler(e){\r\n        dispatch({type:ACTIONS.submit});\r\n    }\r\n\r\n    return (\r\n        <section className='quiz-section section-module container'\r\n        id=\"quiz-section\"\r\n        >\r\n            <h2>Quiz Section</h2>\r\n            {state.submit ? <div className=\"score-card\">\r\n                <h3>Score: {state.count}/{Object.keys(state.boolState).length}</h3>\r\n            </div>:null\r\n            }\r\n            <form className=\"quiz-section-form\">\r\n                {\r\n                    (namesRef.current).map((item, index)=>(\r\n                        <QuizElement \r\n                        name = {item}\r\n                        id = {ids.next().value}\r\n                        year = {year}\r\n                        idGenerator = {idGenerator}\r\n                        answer = {(answersRef.current)[index]}\r\n                        dispatchFunction = {dispatch}\r\n                        submit = {state.submit}\r\n                        isTrue = {state.boolState[item]}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </form>\r\n\r\n            <div className=\"buttons\">\r\n                    <a href=\"#quiz-section-answers\">\r\n                        <input type=\"button\" id=\"quiz-section-submit\" value=\"Submit\" onClick={submitHandler} />\r\n                    </a>\r\n\r\n                    <a href=\"#retry\">\r\n                        <input type=\"button\" id=\"quiz-section-retry\" value=\"Retry\" onClick={retryHandler}/>\r\n                    </a>\r\n            </div>\r\n        \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default QuizSection;","var _g;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLightBulbSvgrepoCom(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 455.881 455.881\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    enableBackground: \"new 0 0 455.881 455.881\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m321.218,257.555c15.516-20.46 23.717-44.881 23.717-70.624 0-31.563-12.379-61.151-34.857-83.314-22.474-22.158-52.261-34.124-83.828-33.668-30.591,0.433-59.412,12.708-81.154,34.564-21.741,21.855-33.867,50.741-34.145,81.335-0.238,26.228 8.011,51.088 23.855,71.894 25.721,33.776 39.887,75.149 39.887,116.498v45.244c0,20.069 16.327,36.396 36.396,36.396h33.854c20.069,0 36.396-16.328 36.396-36.396v-45.241c0.001-41.806 13.691-82.157 39.879-116.688zm-174.478-8.9c-13.808-18.132-20.997-39.803-20.79-62.67 0.499-54.935 45.588-100.26 100.512-101.037 27.553-0.37 53.493,10.035 73.084,29.352 19.597,19.321 30.389,45.116 30.389,72.632 0,22.442-7.147,43.729-20.669,61.56-27.593,36.385-42.45,78.833-43.058,122.93h-76.536c-0.627-43.669-15.817-87.161-42.932-122.767zm42.953,165.746v-6.072l76.647,8.781v2.374c0,1.25-0.13,2.468-0.336,3.659l-76.311-8.742zm0-21.17v-6.809h76.647v15.59l-76.647-8.781zm21.396,47.65c-8.057,0-15.082-4.48-18.731-11.077l64.567,7.397c-3.421,2.321-7.545,3.679-11.981,3.679h-33.855z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m153.776,198.213c-0.585-3.925-0.864-7.957-0.827-11.983 0.038-4.142-3.289-7.53-7.431-7.568-4.114-0.036-7.53,3.289-7.568,7.431-0.044,4.81 0.289,9.632 0.99,14.333 0.555,3.722 3.755,6.395 7.409,6.395 0.368,0 0.741-0.027 1.116-0.083 4.096-0.612 6.922-4.428 6.311-8.525z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m197.913,312.135c0.776,0 1.566-0.122 2.344-0.377 3.935-1.294 6.076-5.533 4.782-9.467-8.312-25.277-20.7-48.827-36.82-69.994-2.664-3.499-5.025-7.226-7.016-11.079-1.902-3.68-6.427-5.12-10.107-3.218-3.679,1.902-5.12,6.427-3.218,10.107 2.39,4.622 5.218,9.089 8.408,13.278 15.106,19.836 26.715,41.904 34.504,65.591 1.038,3.157 3.971,5.159 7.123,5.159z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m306.746,212.613c-3.804-1.639-8.217,0.117-9.855,3.921-2.376,5.518-5.451,10.781-9.139,15.643-2.503,3.3-1.856,8.005 1.444,10.508 1.355,1.028 2.947,1.524 4.526,1.524 2.267,0 4.507-1.023 5.982-2.969 4.419-5.827 8.107-12.143 10.963-18.772 1.639-3.804-0.116-8.217-3.921-9.855z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m227.941,111.938c41.352,0 74.994,33.643 74.994,74.995 0,2.351-0.108,4.72-0.321,7.041-0.378,4.125 2.658,7.775 6.783,8.154 0.233,0.021 0.464,0.032 0.694,0.032 3.833,0 7.103-2.923 7.46-6.815 0.254-2.775 0.384-5.605 0.384-8.412 0-49.623-40.371-89.995-89.994-89.995-4.142,0-7.5,3.358-7.5,7.5s3.358,7.5 7.5,7.5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m227.941,57c4.142,0 7.5-3.358 7.5-7.5v-42c0-4.142-3.358-7.5-7.5-7.5s-7.5,3.358-7.5,7.5v42c0,4.142 3.358,7.5 7.5,7.5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m152.065,71.82c1.39,2.407 3.91,3.752 6.502,3.752 1.272,0 2.562-0.324 3.743-1.006 3.587-2.071 4.817-6.658 2.746-10.245l-20.99-36.36c-2.072-3.588-6.658-4.817-10.245-2.746-3.587,2.071-4.817,6.658-2.746,10.245l20.99,36.36z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m388.22,272.115l-36.36-20.99c-3.588-2.072-8.175-0.842-10.245,2.746-2.071,3.587-0.842,8.174 2.746,10.245l36.36,20.99c1.181,0.682 2.47,1.006 3.743,1.006 2.592,0 5.113-1.346 6.502-3.752 2.071-3.587 0.841-8.174-2.746-10.245z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m67.661,104.366l36.36,20.99c1.181,0.682 2.47,1.006 3.743,1.006 2.592,0 5.113-1.346 6.502-3.752 2.071-3.587 0.842-8.174-2.746-10.245l-36.36-20.99c-3.587-2.072-8.174-0.842-10.245,2.746-2.071,3.587-0.842,8.173 2.746,10.245z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m408.68,180.74h-42c-4.142,0-7.5,3.358-7.5,7.5s3.358,7.5 7.5,7.5h42c4.142,0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m96.7,188.24c0-4.142-3.358-7.5-7.5-7.5h-42c-4.142,0-7.5,3.358-7.5,7.5s3.358,7.5 7.5,7.5h42c4.143,0 7.5-3.358 7.5-7.5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m348.117,126.362c1.272,0 2.562-0.324 3.743-1.006l36.36-20.99c3.587-2.071 4.817-6.658 2.746-10.245-2.071-3.587-6.659-4.817-10.245-2.746l-36.36,20.99c-3.587,2.071-4.817,6.658-2.746,10.245 1.389,2.406 3.911,3.752 6.502,3.752z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m104.021,251.125l-36.36,20.99c-3.587,2.071-4.817,6.658-2.746,10.245 1.389,2.406 3.91,3.752 6.502,3.752 1.272,0 2.562-0.324 3.743-1.006l36.36-20.99c3.587-2.071 4.817-6.658 2.746-10.245-2.07-3.588-6.66-4.817-10.245-2.746z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m293.571,74.566c1.181,0.682 2.47,1.006 3.743,1.006 2.592,0 5.113-1.346 6.502-3.752l20.99-36.36c2.071-3.587 0.841-8.174-2.746-10.245-3.586-2.071-8.174-0.842-10.245,2.746l-20.99,36.36c-2.071,3.587-0.841,8.174 2.746,10.245z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLightBulbSvgrepoCom);\nexport default __webpack_public_path__ + \"static/media/light-bulb-svgrepo-com.e6e00d9e.svg\";\nexport { ForwardRef as ReactComponent };","// Upload all the consants requried for the \r\n// application \r\n\r\nexport const rememberBirthdays = require('./json_data/remember_data.json');\r\nexport const allBirthdays = require(\"./json_data/birthday_data.json\");\r\n\r\n","// Application \n// 1) Birthday Remainder \n// 2) Quiz \n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport BirthdayReminder from './components/BirthdayReminder';\nimport QuizSection from './components/QuizSection';\nimport {ReactComponent as Bulb} from './images/light-bulb-svgrepo-com.svg';\n\n// Importing the constants \nimport {rememberBirthdays, allBirthdays} from './quizConstants';\n\nfunction App() {\n\n  // Default is Dark Mode\n  const [mode, setMode] = useState(true);\n  function modeChangeHandler(e){\n    setMode(old=>!old);\n  }\n\n  useEffect(()=>{console.log(mode)}, [mode])\n\n  return (\n    <div className={mode?\"App\":\"App light-mode\"}>\n        <nav className=\"bg-surface-color\">\n            <div className=\"container\">\n              <div className=\"nav-box\">\n                <h1>Wish em'All</h1>\n                <ul className=\"nav-links\">\n                  <li><a href=\"#reminder-section\">Reminder</a></li>\n                  <li><a href=\"#quiz-section\">Quiz</a></li>\n                  <li className=\"mode-button\" onClick={modeChangeHandler}>\n                    <Bulb className=\"bulb\"/>\n                  </li>\n                </ul>\n              </div>\n            </div>\n\n        </nav>\n        <BirthdayReminder \n        allBirthdays={allBirthdays}\n        />\n        <QuizSection \n        rememberBirthdays = {rememberBirthdays}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}